#pragma checksum "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e81d964260f06a85a6cc93812484a7b31ba28379"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Ordenes_Index), @"mvc.1.0.view", @"/Views/Ordenes/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Ordenes/Index.cshtml", typeof(AspNetCore.Views_Ordenes_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\_ViewImports.cshtml"
using LindaSonrisa;

#line default
#line hidden
#line 2 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\_ViewImports.cshtml"
using LindaSonrisa.Models;

#line default
#line hidden
#line 3 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\_ViewImports.cshtml"
using LindaSonrisa.Models.Context;

#line default
#line hidden
#line 4 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\_ViewImports.cshtml"
using LindaSonrisa.Models.Identity;

#line default
#line hidden
#line 5 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\_ViewImports.cshtml"
using LindaSonrisa.Models.Views;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e81d964260f06a85a6cc93812484a7b31ba28379", @"/Views/Ordenes/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ea340de2240584d9a5cdb0d5753fdaa673fed624", @"/Views/_ViewImports.cshtml")]
    public class Views_Ordenes_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Orden>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/plugins/select2/css/select2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/plugins/select2/js/select2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/plugins/select2/js/i18n/es.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("Create"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("hidden"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Create", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("Edit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Edit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ActionForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
   ViewData["Title"] = "Ã“rdenes"; 

#line default
#line hidden
            BeginContext(39, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
  
    IEnumerable<Orden> ordenes = ViewData["Ordenes"] as IEnumerable<Orden>;
    IEnumerable<DetalleOrden> detalleOrdenes = ViewData["DetalleOrdenes"] as IEnumerable<DetalleOrden>;

#line default
#line hidden
            BeginContext(230, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(246, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Head", async() => {
                BeginContext(263, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(269, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "980e89bcdcc840b7a0ddb2296052e07e", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(346, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(352, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "92f3def8964b4ab2b6169c51c8b9c8b1", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(418, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(424, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab383d00a2b94cf99fe94344a3afc754", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(486, 430, true);
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            $('#selec2-productos').select2({
                language: ""es"",
                dropdownAutoWidth: true,
                width: 'resolve'
            });
        });
    </script>

    <style>
        .table td {
            padding: 0.75rem;
            vertical-align: middle;
            border-top: 1px solid #e5e9f2;
        }
    </style>
");
                EndContext();
            }
            );
            BeginContext(919, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(921, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cb7bb5a2a4204cde91ea7fe5ac24b7ab", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(982, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(984, 57, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6e792f5f8a5946dfb05e4c49fd1deb0f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1041, 28, true);
            WriteLiteral("\r\n<input name=\"ChangeStatus\"");
            EndContext();
            BeginWriteAttribute("value", " value=\'", 1069, "\'", 1114, 1);
#line 36 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
WriteAttributeValue("", 1077, Url.Action("ChangeStatus","Modulos"), 1077, 37, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1115, 35, true);
            WriteLiteral(" hidden>\r\n<input name=\"Proveedores\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1150, "\"", 1201, 1);
#line 37 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
WriteAttributeValue("", 1158, Url.Action("GetAllForOrden","Proveedores"), 1158, 43, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1202, 35, true);
            WriteLiteral(" hidden />\r\n<input name=\"Productos\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1237, "\"", 1289, 1);
#line 38 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
WriteAttributeValue("", 1245, Url.Action("GetAllByProveedor","Productos"), 1245, 44, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1290, 1501, true);
            WriteLiteral(@" hidden />

<div class=""content"">
    <div class=""breadcrumb-wrapper breadcrumb-contacts"">
        <div>
            <nav aria-label=""breadcrumb"">
                <ol class=""breadcrumb p-0"">
                    <li class=""breadcrumb-item"">
                        <a href=""index.html"">
                            <span class=""mdi mdi-home""></span>
                        </a>
                    </li>
                    <li class=""breadcrumb-item"">
                        <a>
                            <span class=""mdi mdi-cart""></span>
                        </a>
                    </li>
                </ol>
            </nav>

        </div>
        <div>
            <button type=""button"" class=""btn btn-primary"" onclick=""loadModalAdd()"">
                <i class="" mdi mdi-plus mr-1""></i> Nuevo
            </button>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card card-default"">
                <div class=""card-header ");
            WriteLiteral(@"card-header-border-bottom d-flex justify-content-between"">
                    <h2>Ã“rdenes de compra</h2>
                </div>
                <div class=""card-body"">
                    <div class=""basic-data-table"">
                        <table id=""basic-data-table"" class=""table nowrap"" style=""width:100%"">
                            <thead>
                                <tr>
                                    <th>
                                        ");
            EndContext();
            BeginContext(2792, 38, false);
#line 77 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayNameFor(model => model.Id));

#line default
#line hidden
            EndContext();
            BeginContext(2830, 127, true);
            WriteLiteral("\r\n                                    </th>\r\n                                    <th>\r\n                                        ");
            EndContext();
            BeginContext(2958, 48, false);
#line 80 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayNameFor(model => model.DetalleOrden));

#line default
#line hidden
            EndContext();
            BeginContext(3006, 127, true);
            WriteLiteral("\r\n                                    </th>\r\n                                    <th>\r\n                                        ");
            EndContext();
            BeginContext(3134, 48, false);
#line 83 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayNameFor(model => model.SolicitadoEl));

#line default
#line hidden
            EndContext();
            BeginContext(3182, 127, true);
            WriteLiteral("\r\n                                    </th>\r\n                                    <th>\r\n                                        ");
            EndContext();
            BeginContext(3310, 51, false);
#line 86 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayNameFor(model => model.FueRecepcionada));

#line default
#line hidden
            EndContext();
            BeginContext(3361, 127, true);
            WriteLiteral("\r\n                                    </th>\r\n                                    <th>\r\n                                        ");
            EndContext();
            BeginContext(3489, 49, false);
#line 89 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayNameFor(model => model.ActualizadoEl));

#line default
#line hidden
            EndContext();
            BeginContext(3538, 206, true);
            WriteLiteral("\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n");
            EndContext();
#line 95 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                 foreach (var item in ordenes)
                                {

#line default
#line hidden
            BeginContext(3843, 120, true);
            WriteLiteral("                                <tr>\r\n                                    <td>\r\n                                        ");
            EndContext();
            BeginContext(3964, 37, false);
#line 99 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.Id));

#line default
#line hidden
            EndContext();
            BeginContext(4001, 166, true);
            WriteLiteral("\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class=\"row\" style=\"width:25rem\">\r\n");
            EndContext();
#line 103 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                             foreach (DetalleOrden detalle in detalleOrdenes.Where(d => d.OrdenId == item.Id))
                                            {

#line default
#line hidden
            BeginContext(4342, 321, true);
            WriteLiteral(@"                                                <div class=""col-lg-9"">
                                                    <div class=""form-row"">
                                                        <div class=""col-md-12 mb-1"">
                                                            <input class=""form-control""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 4663, "\"", 4695, 1);
#line 108 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
WriteAttributeValue("", 4671, detalle.Producto.Titulo, 4671, 24, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4696, 541, true);
            WriteLiteral(@" disabled>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-lg-3"">
                                                    <div class=""form-row"">
                                                        <div class=""col-md-12 mb-1"">
                                                            <input class=""form-control"" style=""text-align: center;""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 5237, "\"", 5262, 1);
#line 115 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
WriteAttributeValue("", 5245, detalle.Cantidad, 5245, 17, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5263, 192, true);
            WriteLiteral(" disabled>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n");
            EndContext();
#line 119 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                            }

#line default
#line hidden
            BeginContext(5502, 219, true);
            WriteLiteral("                                        </div>\r\n                                    </td>\r\n                                    <td class=\"sorting_1\">\r\n                                        <span style=\"display:none;\">");
            EndContext();
            BeginContext(5722, 42, false);
#line 123 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                                               Write(item.SolicitadoEl.ToString("yyyyMMddHHmm"));

#line default
#line hidden
            EndContext();
            BeginContext(5764, 7, true);
            WriteLiteral("</span>");
            EndContext();
            BeginContext(5772, 46, false);
#line 123 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                                                                                                 Write(item.SolicitadoEl.ToString("dd/MM/yyyy HH:mm"));

#line default
#line hidden
            EndContext();
            BeginContext(5818, 127, true);
            WriteLiteral("\r\n                                    </td>\r\n                                    <td>\r\n                                        ");
            EndContext();
            BeginContext(5946, 50, false);
#line 126 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.FueRecepcionada));

#line default
#line hidden
            EndContext();
            BeginContext(5996, 127, true);
            WriteLiteral("\r\n                                    </td>\r\n                                    <td>\r\n                                        ");
            EndContext();
            BeginContext(6124, 48, false);
#line 129 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.ActualizadoEl));

#line default
#line hidden
            EndContext();
            BeginContext(6172, 234, true);
            WriteLiteral("\r\n                                    </td>\r\n                                    <td style=\"vertical-align: middle;\">\r\n                                        <button class=\"btn btn-primary\" type=\"button\" style=\"padding:0.3rem 0.5rem\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 6406, "\"", 6478, 3);
            WriteAttributeValue("", 6416, "loadModalView(\'", 6416, 15, true);
#line 132 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
WriteAttributeValue("", 6431, Url.Action("Get","Modulos",new {id=item.Id}), 6431, 45, false);

#line default
#line hidden
            WriteAttributeValue("", 6476, "\')", 6476, 2, true);
            EndWriteAttribute();
            BeginContext(6479, 241, true);
            WriteLiteral(">\r\n                                            <i class=\"mdi mdi-eye\"></i>\r\n                                        </button>\r\n                                        <button class=\"btn btn-danger\" type=\"button\" style=\"padding:0.3rem 0.5rem\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 6720, "\"", 6794, 3);
            WriteAttributeValue("", 6730, "actionDelete(\'", 6730, 14, true);
#line 135 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
WriteAttributeValue("", 6744, Url.Action("Delete","Modulos",new {id=item.Id}), 6744, 48, false);

#line default
#line hidden
            WriteAttributeValue("", 6792, "\')", 6792, 2, true);
            EndWriteAttribute();
            BeginContext(6795, 212, true);
            WriteLiteral(">\r\n                                            <i class=\"mdi mdi-delete\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n");
            EndContext();
#line 140 "C:\Users\Javier\Desktop\LindaSonrisa\LindaSonrisa\Views\Ordenes\Index.cshtml"
                                        }

#line default
#line hidden
            BeginContext(7050, 452, true);
            WriteLiteral(@"                                </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""modal-model"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalCenterTitle""
     aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            ");
            EndContext();
            BeginContext(7502, 2195, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d58dc0999194e6884a9bcdebddde1a4", async() => {
                BeginContext(7524, 2166, true);
                WriteLiteral(@"
                <div id=""modal-header"" class=""modal-header px-4"">
                    <h5 class=""modal-title"">Crear Ã³rden</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">Ã—</span>
                    </button>
                </div>
                <div class=""modal-body px-4"">
                    <div id=""ValidationSummary""></div>
                    <div id=""DV_content"" class=""row mb-2"">
                        <div class=""col-md-12"">
                            <div class=""form-row"">
                                <label for=""selec2-productos"">Seleccione los productos</label>
                                <select class=""js-example-basic-multiple form-control mb-5"" id=""selec2-productos"" name=""productos[]"" multiple=""multiple"" style=""width: 100%"">
                                </select>
                            </div>
                        </div>
                    </div>
       ");
                WriteLiteral(@"             <div id=""DV_items"" class=""basic-data-table"" style=""display:none"">
                        <table id=""DT_items"" class=""table nowrap"" style=""width:100%;"">
                            <thead>
                                <tr>
                                    <th>
                                        Producto
                                    </th>
                                    <th>
                                        Cantidad
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div id=""modal-footer"" class=""modal-footer px-4"">
                    <button id=""ActionButton"" onclick=""nextAction()"" type=""button"" class=""btn btn-primary btn-default"">Siguiente</button>
                    <button id=""SubmitButton"" type=""submit"" class=""");
                WriteLiteral("btn btn-primary btn-default\" style=\"display:none;\">Enviar al formulario</button>\r\n                </div>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9697, 40, true);
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(9755, 34203, true);
                WriteLiteral(@"
    <script>
        jQuery(document).ready(function () {

            jQuery('#basic-data-table').removeAttr('width').DataTable({
                ""autoWidth"": false,
                ""aLengthMenu"": [[10, 25, 50, -1], [10, 25, 50, ""Todos""]],
                ""pageLength"": 10,
                ""dom"": '<""row justify-content-between top-information""lf>rt<""row justify-content-between bottom-information""ip><""clear"">',
                ""columns"": [
                    null,
                    null,
                    { ""sType"": ""date-uk""},
                    null,
                    { ""sType"": ""date-uk"" },
                    { ""orderable"": false, ""width"": ""5%"" },
                ],
                ""language"": {
                    ""lengthMenu"": ""Mostrar_MENU_registros"",
                    ""zeroRecords"": ""No se encontrÃ³ nada"",
                    ""info"": ""Mostrando del _START_ al _END_ de un total de _TOTAL_ registro(s)"",
                    ""infoEmpty"": ""No hay registros"",
                 ");
                WriteLiteral(@"   ""emptyTable"": ""No hay registros para mostrar"",
                    ""loadingRecords"": ""Cargando..."",
                    ""processing"": ""Procesando..."",
                    ""search"": ""Buscar"",
                    ""infoFiltered"": ""(filtrado de un total de _MAX_ registro(s))"",
                    ""paginate"": {
                        ""first"": ""Primera"",
                        ""last"": ""Ãšltima"",
                        ""next"": ""Siguiente"",
                        ""previous"": ""Anterior""
                    },
                },
            });

            jQuery('#DT_items').DataTable({
                ""aLengthMenu"": [[5, 10, 15, -1], [5, 10, 15, ""Todos""]],
                ""pageLength"": 5,
                ""dom"": '<""row justify-content-between top-information""lf>rt<""row justify-content-between bottom-information""ip><""clear"">',
                ""columns"": [
                    { ""width"": ""50%"" },
                    { ""orderable"": false, ""width"": ""50%"" },
                ],
                ""l");
                WriteLiteral(@"anguage"": {
                    ""lengthMenu"": ""Mostrar _MENU_ registros"",
                    ""zeroRecords"": ""No se encontrÃ³ nada"",
                    ""info"": ""Mostrando del _START_ al _END_ de un total de _TOTAL_ registro(s)"",
                    ""infoEmpty"": ""No hay registros"",
                    ""emptyTable"": ""No hay registros para mostrar"",
                    ""loadingRecords"": ""Cargando..."",
                    ""processing"": ""Procesando..."",
                    ""search"": ""Buscar"",
                    ""infoFiltered"": ""(filtrado de un total de _MAX_ registro(s))"",
                    ""paginate"": {
                        ""first"": ""Primera"",
                        ""last"": ""Ãšltima"",
                        ""next"": ""Siguiente"",
                        ""previous"": ""Anterior""
                    },
                },
            });
        });

        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            ""date-uk-pre"": function (a) {
                var ukDatea = a.split('/');
  ");
                WriteLiteral(@"              return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            ""date-uk-asc"": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            ""date-uk-desc"": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });

        function nextAction() {
            var table = $('#DT_items').DataTable();
            var productos = $(""#selec2-productos"").select2(""val"");

            if (productos.length > 0) {
                $(""#selec2-productos option"").each(function () {
                    var option = $(this);
                    productos.forEach(function (item, index, array) {
                        if (item == option.val()) {
                            table.row.add([
                                option.text(),
                                `<input class=""form-control"" type=""number"" min=""1"" max=""999999999"" value=""0"" name=""${option.val()}"" form=""ActionForm"" requir");
                WriteLiteral(@"ed>`,
                            ]).draw(false);
                        }
                    });
                });

                $(""#DV_content"").hide();
                $(""#DV_items"").show();
                $(""#ActionButton"").attr(""onclick"", ""previousAction()"");
                $(""#ActionButton"").attr('class', 'btn btn-secondary btn-default');
                $(""#ActionButton"").html('Anterior');
                $(""#SubmitButton"").show();

            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'No se ha seleccionado ningÃºn producto',
                    confirmButtonColor: '#3fabad'
                });
            };
        }

        function previousAction() {
            $(""#SubmitButton"").hide();
            $(""#DV_items"").hide();
            $(""#DV_content"").show();
            $(""#ActionButton"").attr(""onclick"", ""nextAction()"");
            $(""#ActionButton"").attr('class', 'b");
                WriteLiteral(@"tn btn-primary btn-default');
            $(""#ActionButton"").html('Siguiente');

            $('#DT_items').DataTable().clear().draw();
        }

        function reset() {
            $(""#selec2-productos"").val('');
            $(""#SubmitButton"").hide();
            $(""#DV_items"").hide();
            $(""#DV_content"").show();
            $(""#ActionButton"").attr(""onclick"", ""nextAction()"");
            $(""#ActionButton"").attr('class', 'btn btn-primary btn-default');
            $(""#ActionButton"").html('Siguiente');

            $('#DT_items').DataTable().clear().draw();
            $(""#ValidationSummary"").html('');
        }

        $('#modal-model').on('hidden.bs.modal', function () {
            reset();
        })

        function loadModalAdd() {

            var url = $('input[name=""Proveedores""]').val();

            $.ajax({
                type: ""get"",
                datatype: ""json"",
                url: url,
            }).done(function (data) {
                if (");
                WriteLiteral(@"data.success) {

                    var options = {};
                    $.map(data.proveedores,
                        function (item) {
                            options[item.id] = item.nombre;
                        });

                    (async () => {

                        const { value: id } = await Swal.fire({
                            title: 'Crear orden',
                            input: 'select',
                            inputOptions: options,
                            inputPlaceholder: 'Seleccione un proveedor',
                            confirmButtonColor: '#3fabad',
                            confirmButtonText: 'Listo',
                            cancelButtonText: 'Cancelar',
                            showCancelButton: true,
                            inputValidator: (value) => {
                                return new Promise((resolve) => {
                                    if (value > 0) {
                                        resolve()
 ");
                WriteLiteral(@"                                   } else {
                                        resolve('Debe seleccionar un proveedor')
                                    }
                                })
                            }
                        })

                        if (id) {

                            url = $('input[name=""Productos""]').val();

                            $.ajax({
                                type: ""get"",
                                datatype: ""json"",
                                url: url,
                                data: {
                                    id: id,
                                }
                            }).done(function (data) {
                                if (data.success) {

                                    var productos = []
                                    data.productos.forEach(function (item, index) {
                                        var producto = {
                                           ");
                WriteLiteral(@" id: item.id,
                                            text: item.titulo
                                        }
                                        productos.push(producto)
                                    });

                                    $(""#selec2-productos"").select2({
                                        data: productos
                                    })
                                }
                            })

                            var content = `<h5 class=""modal-title"" id=""exampleModalLongTitle2"">Crear Ã³rden</h5>
                                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"""">
                                                        <span aria-hidden=""true"">Ã—</span>
                                                    </button>`;

                            var header = $('#modal-header');
                            header.attr(""class"", ""modal-header px-4"");

                    ");
                WriteLiteral(@"        header.html(content);

                            $(""#ActionForm"").attr(""action"", $(""[name='Create']"").attr(""action""));
                            $(""#ActionForm"").attr(""method"", $(""[name='Create']"").attr(""method""));
                            $(""#ActionForm"").attr(""enctype"", $(""[name='Create']"").attr(""enctype""));
                            $(""#ActionForm"").attr(""name"", ""CreateForm"");

                            $('#modal-footer').show();

                            $('#modal-model').modal({
                                backdrop: 'static'
                            });
                        } 

                    })()
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: data.message,
                        confirmButtonColor: '#3fabad',
                    })
                }

            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.log(""code http"", jqXHR.stat");
                WriteLiteral(@"us)
                switch (jqXHR.status) {
                    case 400:
                        alert(""Favor completar las variables correctamente"");
                        $(""#SubmitLoginButton"").prop(""disabled"", false);
                        break;
                    case 500:
                        alert(""Se ha generado un error en el servidor"");
                        $(""#SubmitLoginButton"").prop(""disabled"", false);
                        break;
                    case 403:
                        alert(""Ud no estÃ¡ autorizado para ver esta informacion"");
                        $(""#SubmitLoginButton"").prop(""disabled"", false);
                        break;
                    default:
                        break;
                }
            });
        }


        $(function () {
            $(""#ActionForm"").submit(function (e) {
                e.preventDefault();

                if ($(this).attr(""name"") == ""CreateForm"") {

                    Swal.fire({
      ");
                WriteLiteral(@"                  title: 'Â¿EstÃ¡s listo?',
                        text: ""Se enviarÃ¡ el formulario"",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3fabad',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Si, envÃ­alo!',
                        cancelButtonText: 'No'

                    }).then((result) => {
                        if (result.value) {
                            var formAction = $(this).attr(""action"");
                            var formMethod = $(this).attr(""method"");
                            var token = $(""[name='__RequestVerificationToken']"").val();
                            $(""#SubmitButton"").prop(""disabled"", true);
                            $(""#ValidationSummary"").html("""");

                            var table = $('#DT_items').DataTable();
                            var inputs = table.$('input').serializeArray();

           ");
                WriteLiteral(@"                 $.ajax({
                                contentType: ""application/json; charset=utf-8"",
                                url: formAction,
                                data: JSON.stringify(inputs),
                                type: formMethod
                            }).done(function (data) {

                                if (data.success) {

                                    let timerInterval
                                    Swal.fire({
                                        icon: 'success',
                                        title: data.title,
                                        html: 'Voy actualizar la pagina en <b></b> milisegundos.',
                                        timer: 2000,
                                        timerProgressBar: true,
                                        onBeforeOpen: () => {
                                            Swal.showLoading()
                                            timerInterval = setInterval((");
                WriteLiteral(@") => {
                                                const content = Swal.getContent()
                                                if (content) {
                                                    const b = content.querySelector('b')
                                                    if (b) {
                                                        b.textContent = Swal.getTimerLeft()
                                                    }
                                                }
                                            }, 100)
                                        },
                                        onClose: () => {
                                            clearInterval(timerInterval);
                                            location.reload();
                                        }
                                    }).then((result) => {
                                        if (result.dismiss === Swal.DismissReason.timer) {
                              ");
                WriteLiteral(@"              location.reload();
                                        }
                                    })
                                }
                                else {
                                    $(""#SubmitButton"").prop(""disabled"", false);

                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: data.message,
                                        confirmButtonColor: '#3fabad'
                                    });

                                    if (typeof data.errors !== 'undefined') {
                                        displayValidationErrors(data.errors);
                                    }

                                }
                            }).fail(function (jqXHR, textStatus, errorThrown) {

                                $(""#SubmitButton"").prop(""disabled"", false);

              ");
                WriteLiteral(@"                  switch (jqXHR.status) {
                                    case 400:
                                        alert(""Favor completar las variables correctamente"");
                                        break;
                                    case 500:
                                        alert(""Se ha generado un error en el servidor"");
                                        break;
                                    case 403:
                                        alert(""Ud no estÃ¡ autorizado para ver esta informacion"");
                                        break;
                                    default:
                                        break;
                                }
                            });
                        }
                    })
                }

                if ($(this).attr(""name"") == ""EditForm"") {

                    Swal.fire({
                        title: 'Â¿EstÃ¡s listo?',
                        text: ""Se e");
                WriteLiteral(@"nviarÃ¡ el formulario"",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3fabad',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Si, envÃ­alo!',
                        cancelButtonText: 'No'

                    }).then((result) => {
                        if (result.value) {
                            var formAction = $(this).attr(""action"");
                            var formMethod = $(this).attr(""method"");
                            var token = $(""[name='__RequestVerificationToken']"").val();
                            $(""#SubmitButton"").prop(""disabled"", true);
                            $(""#ValidationSummary"").html("""");

                            $.ajax({
                                url: formAction,
                                data: {
                                    __RequestVerificationToken: token,
                                    ");
                WriteLiteral(@"Id: $('#Id').val(),
                                    HoraInicio: $('#HoraInicio').val(),
                                    HoraTermino: $('#HoraTermino').val(),
                                    UsuarioId: $('#UsuarioId').val(),
                                    ServicioId: $('#ServicioId').val(),
                                    DiaId: $('#DiaId').val(),
                                    Box: $('#Box').val(),
                                },
                                type: formMethod
                            }).done(function (data) {

                                if (data.success) {

                                    let timerInterval
                                    Swal.fire({
                                        icon: 'success',
                                        title: data.title,
                                        html: 'Voy actualizar la pagina en <b></b> milisegundos.',
                                        timer: 2000,
               ");
                WriteLiteral(@"                         timerProgressBar: true,
                                        onBeforeOpen: () => {
                                            Swal.showLoading()
                                            timerInterval = setInterval(() => {
                                                const content = Swal.getContent()
                                                if (content) {
                                                    const b = content.querySelector('b')
                                                    if (b) {
                                                        b.textContent = Swal.getTimerLeft()
                                                    }
                                                }
                                            }, 100)
                                        },
                                        onClose: () => {
                                            clearInterval(timerInterval);
                                      ");
                WriteLiteral(@"      location.reload();
                                        }
                                    }).then((result) => {
                                        if (result.dismiss === Swal.DismissReason.timer) {
                                            location.reload();
                                        }
                                    })
                                }
                                else {
                                    $(""#SubmitButton"").prop(""disabled"", false);

                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: data.message,
                                        confirmButtonColor: '#3fabad'
                                    });

                                    if (typeof data.errors !== 'undefined') {
                                        displayValidationErrors(data.errors);
  ");
                WriteLiteral(@"                                  }

                                }
                            }).fail(function (jqXHR, textStatus, errorThrown) {

                                $(""#SubmitButton"").prop(""disabled"", false);

                                switch (jqXHR.status) {
                                    case 400:
                                        alert(""Favor completar las variables correctamente"");
                                        break;
                                    case 500:
                                        alert(""Se ha generado un error en el servidor"");
                                        break;
                                    case 403:
                                        alert(""Ud no estÃ¡ autorizado para ver esta informacion"");
                                        break;
                                    default:
                                        break;
                                }
                            });
");
                WriteLiteral(@"                        }
                    })
                }
            });
        });

        function displayValidationErrors(errors) {
            var $div = $(""#ValidationSummary"");

            $div.html(`<div class=""alert alert-danger alert-dismissible"" role=""alert"">
                                                            <h4 class=""alert-heading"" style=""margin-bottom: 1rem;"">Errores!</h4>
                                                            <div id=""ListOfErors"">
                                                            </div>
                                                            <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                                            <span aria-hidden=""true"">&times;</span>
                                                            </button>
                                                       </div >`);

            var $list = $(""#ListOfErors"");

            $list.empty(");
                WriteLiteral(@");

            var $length = errors.length;

            $.each(errors, function (idx, errorMessage) {

                var $hr = '<hr>';

                if ((idx + 1) == $length) {
                    $hr = '';
                }

                $list.append('<p class=""mt-1"">' + errorMessage + '</p>' + $hr);
            });
        };

        function actionDelete(url) {
            var token = $(""[name='__RequestVerificationToken']"").val();

            Swal.fire({
                title: 'Â¿EstÃ¡s seguro?',
                text: ""Â¡No podrÃ¡s revertir esto!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3fabad',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, elimÃ­nalo!',
                cancelButtonText: 'Cancelar'

            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        type: ""Delete"",
                       ");
                WriteLiteral(@" data: {
                            __RequestVerificationToken: token,
                        },
                        url: url,
                    }).done(function (data) {
                        if (data.success) {
                            let timerInterval
                            Swal.fire({
                                icon: 'success',
                                title: data.title,
                                html: 'Voy actualizar la pagina en <b></b> milisegundos.',
                                timer: 2000,
                                timerProgressBar: true,
                                onBeforeOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
                                        if (content) {
                                            const b = content.querySelector('b')
             ");
                WriteLiteral(@"                               if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                onClose: () => {
                                    clearInterval(timerInterval);
                                    location.reload();
                                }
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            let timerInterval
                            Swal.fire({
                                icon: 'error',
                                title: data.title,
              ");
                WriteLiteral(@"                  html: 'Voy actualizar la pagina en <b></b> milisegundos.',
                                timer: 2000,
                                timerProgressBar: true,
                                onBeforeOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
                                        if (content) {
                                            const b = content.querySelector('b')
                                            if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                onClose: () => {
                                    clearInterval(timerInterval);
                   ");
                WriteLiteral(@"                 location.reload();
                                }
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    location.reload();
                                }
                            })
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        console.log(""code http"", jqXHR.status)
                        switch (jqXHR.status) {
                            case 400:
                                alert(""Favor completar las variables correctamente"");
                                break;
                            case 500:
                                alert(""Se ha generado un error en el servidor"");
                                break;
                            case 403:
                                alert(""Ud no estÃ¡ autorizado para ver esta informacion"");
                        ");
                WriteLiteral(@"        break;
                            default:
                                break;
                        }
                    });

                } else if (
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Cancelado',
                        text: 'El elemento seleccionado no ha sido eliminado',
                        confirmButtonColor: '#3fabad',
                    })
                }
            })
        }

        function actionChange() {
            var token = $(""[name='__RequestVerificationToken']"").val();

            var estado;

            if ($('#Disponible').val() == '1') {
                estado = 'Activo';
            }

            if ($('#Disponible').val() == '0') {
                estado = 'Inactivo';
            }

            var url = $('input[name=""ChangeStatus""]').val();

            Swal.fire({");
                WriteLiteral(@"
                title: 'Â¿EstÃ¡s seguro?',
                text: `El estado actual es: ${estado}`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3fabad',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, cÃ¡mbialo!',
                cancelButtonText: 'Cancelar'

            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        type: ""Post"",
                        data: {
                            __RequestVerificationToken: token,
                            id: $('#Id').val(),
                        },
                        url: url,
                    }).done(function (data) {
                        if (data.success) {
                            let timerInterval
                            Swal.fire({
                                icon: 'success',
                                title: data.title,
                       ");
                WriteLiteral(@"         html: 'Voy actualizar la pagina en <b></b> milisegundos.',
                                timer: 2000,
                                timerProgressBar: true,
                                onBeforeOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
                                        if (content) {
                                            const b = content.querySelector('b')
                                            if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                onClose: () => {
                                    clearInterval(timerInterval);
                            ");
                WriteLiteral(@"        location.reload();
                                }
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            let timerInterval
                            Swal.fire({
                                icon: 'error',
                                title: data.title,
                                html: 'Voy actualizar la pagina en <b></b> milisegundos.',
                                timer: 2000,
                                timerProgressBar: true,
                                onBeforeOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
  ");
                WriteLiteral(@"                                      if (content) {
                                            const b = content.querySelector('b')
                                            if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                onClose: () => {
                                    clearInterval(timerInterval);
                                    location.reload();
                                }
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    location.reload();
                                }
                            })
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
            ");
                WriteLiteral(@"            console.log(""code http"", jqXHR.status)
                        switch (jqXHR.status) {
                            case 400:
                                alert(""Favor completar las variables correctamente"");
                                break;
                            case 500:
                                alert(""Se ha generado un error en el servidor"");
                                break;
                            case 403:
                                alert(""Ud no estÃ¡ autorizado para ver esta informacion"");
                                break;
                            default:
                                break;
                        }
                    });

                } else if (
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Cancelado',
                        text: 'El elemento seleccionado no");
                WriteLiteral(@" ha cambiado su estado',
                        confirmButtonColor: '#3fabad',
                    })
                }
            })
        }

        jQuery(document).ajaxStart(function () {
            NProgress.configure({ showSpinner: false });
            NProgress.start();
        });

        jQuery(document).ajaxStop(function () {
            NProgress.done();
        });</script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Orden> Html { get; private set; }
    }
}
#pragma warning restore 1591
